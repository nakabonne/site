<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Ryo Nakao</title>
    <link>https://nakabonne.dev/tags/golang/</link>
    <description>Recent content in Golang on Ryo Nakao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nakabonne.dev/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding how AES encryption works</title>
      <link>https://nakabonne.dev/posts/understanding-how-aes-encryption-works/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nakabonne.dev/posts/understanding-how-aes-encryption-works/</guid>
      <description>I recently had the opportunity to encrypt/decrypt stuff using AES, but I didn&amp;rsquo;t know it inside out well. I couldn’t help but be curious about how it is working, and I realized my mind could only be satisfied by digging deeper into its implementation.</description>
    </item>
    
    <item>
      <title>Take a walk the Go AST</title>
      <link>https://nakabonne.dev/posts/take-a-walk-the-go-ast/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nakabonne.dev/posts/take-a-walk-the-go-ast/</guid>
      <description>What do you refer to when you&amp;rsquo;re curious about the Go AST? A document? Source code? While reading the documentation helps you understand it in the abstract, you can&amp;rsquo;t see how APIs relate to each other, etc.</description>
    </item>
    
    <item>
      <title>Digging deeper into the analysis of Go-code</title>
      <link>https://nakabonne.dev/posts/digging-deeper-into-the-analysis-of-go-code/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nakabonne.dev/posts/digging-deeper-into-the-analysis-of-go-code/</guid>
      <description>The analysis of source code at the syntactic level can help you with your coding in a variety of ways. For that, the text is almost always converted to AST first to make it easier to handle in most languages.</description>
    </item>
    
    <item>
      <title>A choice to start small Service Mesh</title>
      <link>https://nakabonne.dev/posts/a-choice-to-start-small-service-mesh/</link>
      <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nakabonne.dev/posts/a-choice-to-start-small-service-mesh/</guid>
      <description>Now, the architecture called Service Mesh is attracting attention in the Microservice industry.
There are various products for realization, but I made a small control-plane called sxds.</description>
    </item>
    
    <item>
      <title>Go × Clean Architecture implementation pattern</title>
      <link>https://nakabonne.dev/posts/go-clean-architecture/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nakabonne.dev/posts/go-clean-architecture/</guid>
      <description>Click here for Japanese version
What is Clean Architecture? It could be thought an architecture pattern that dissociates interest by realizing:</description>
    </item>
    
  </channel>
</rss>