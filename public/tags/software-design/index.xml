<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Design on Ryo Nakao</title>
    <link>http://35.200.16.155/tags/software-design/</link>
    <description>Recent content in Software Design on Ryo Nakao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Jan 2019 11:33:43 +0000</lastBuildDate>
    
	<atom:link href="http://35.200.16.155/tags/software-design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Depth of module</title>
      <link>http://35.200.16.155/posts/depth-of-module/</link>
      <pubDate>Thu, 17 Jan 2019 11:33:43 +0000</pubDate>
      
      <guid>http://35.200.16.155/posts/depth-of-module/</guid>
      <description>Click here for Japanese version
This article summarizes the concept of deep module described in the book “A Philosophy of Software Design” written by Professor John Ousterhout at Stanford University, and is written with permission of him.</description>
    </item>
    
    <item>
      <title>Go × Clean Architecture implementation pattern</title>
      <link>http://35.200.16.155/posts/go-clean-architecture/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://35.200.16.155/posts/go-clean-architecture/</guid>
      <description>Click here for Japanese version
What is Clean Architecture? It could be thought an architecture pattern that dissociates interest by realizing:</description>
    </item>
    
  </channel>
</rss>